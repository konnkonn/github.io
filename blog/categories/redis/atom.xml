<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Redis | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/redis/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-07-20T14:03:56+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Webエンジニアにも勉強になる！データベースエンジニア養成読本[書評]]]></title>
    <link href="http://morizyun.github.io/blog/database-engineer-training-book-review/"/>
    <updated>2015-03-07T16:00:00+09:00</updated>
    <id>http://morizyun.github.io/blog/database-engineer-training-book-review</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774158062/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774158062&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774158062&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774158062" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
最近、仕事でRMSDBやNoSQL関係の設計などで苦労をしていたので、基礎知識の復習を兼ねて『<strong><a href="http://www.amazon.co.jp/gp/product/4774158062/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4774158062&amp;linkCode=as2&amp;tag=morizyun00-22">データベースエンジニア養成読本</a></strong>』を読みました。全般的にRMSDBやNoSQLの主要な製品の概要やSQLなどの基礎知識を体系的に知ることができる本です。</p>

<p>今回はいつもどおり、自分の頭を整理するための俺得メモです。
(わかりにくい部分が多いと思いますが、ご容赦ください)</p>

<!-- more -->


<br style="clear:both;"/>


<p><div>
  <script type="text/javascript"><!--
  google_ad_client = "ca-pub-4186413323075068";
  /* middle_yoko_naga2 */
  google_ad_slot = "4362325392";
  google_ad_width = 728;
  google_ad_height = 90;
  //-->
  </script>
  <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</div></p>

<h2>DBの需要な機能</h2>

<p>DBが一般的に持っているトランザクションのACID属性はアプリケーションの実装を楽にするために重要な機能である。</p>

<pre>
Atomicity   (原子性) => トランザクションに含まれるタスクが全て実行、or 全く実行されないことを保証する性質
Consistency (一貫性) => トランザクション開始と終了時にあらかじめ与えられた整合性を満たすことを保証する性質
Isolation   (独立性) => トランザクション中に行われる操作の過程が他の操作から隠蔽されること
Durability  (永続性) => トランザクション操作の完了通知をユーザが受けた時点で、その操作は永続的となり、結果が失われないこと
</pre>


<p>上記の説明は、<strong><a href="http://ja.wikipedia.org/wiki/ACID_(%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E7%A7%91%E5%AD%A6">ACID (コンピュータ科学) Wikipedia</a>)</strong></p>

<h2>InnoDB、MyISAMとは</h2>

<p>MySQLのデータベースエンジン「InnoDB と MyISAM」について。</p>

<pre>
InnoDB => ロック方式が行ロック
MyISAM => ロック方式がテーブルロック。テーブル自体にロックがかかるため、重い処理を実行すると処理待ちが発生しやすくなる。
</pre>


<h2>NoSQLの特徴</h2>

<p>Web系システムを中心として次の「3V」と呼ばれる課題が発生しやすくなった。</p>

<pre>
Volume   => データ量
Variety  => データの種類
Velocity => データ発生 / 処理頻度 / 速度
</pre>


<p>その課題に特化した解決策として、NoSQLが台頭し始めた。</p>

<p>しかしながら、NoSQLがRDBMSに置き換わるようなものではない。理由としては、</p>

<pre>
1) NoSQLは特定の問題を解決するためにRDBMSの持ついくつかの機能を犠牲にしている
2) NoSQLは歴史が浅く、技術として十分に使い古されておらず、ノウハウも不足している
</pre>


<h2>カラムファミリー型のデータベース: BigTableなど</h2>

<p>複数の列をまとめたカラムファミリーの単位でデータを取り出す。
実際のデータは、行、カラムファミリー、列をキーとしてそれらを辞書順にソートされたKVSのような形でデータを保持している。</p>

<p>カラムファミリー型DBの得意分野は、当単位での入力・検索を高速に行うようなOLTP(OnLine Transaction Processing)
である。一方で、RDBMSは格納データに複雑な集計を行う計算などに向いている。使い方が全く異なることに注意が必要。</p>

<h2>Redisについて</h2>

<p>すべてのデータをメモリ上に持つ「インメモリデータベース」として、高速に動作。メモリ上のデータをディスクに保存し、永続化する。</p>

<p>Redisは次のデータ型を持つ。</p>

<pre>
String:     文字列
List:       配列
Set:        集合
Hash:       連想配列
Sorted Set: スコア付き集合
</pre>


<p>Redisはシングルプロセス、シングルスレッドのイベント駆動アーキテクチャを採用しているので多くの処理をアトミックに行える。</p>

<p>Redisが有効な用途の一例。</p>

<pre>
リアルタイムランキング => Sorted Set型を使用すると高速にランキング処理を行うことができる
アクティブユーザーの集計 => Set型を利用して、集合操作関数を利用すればいろいろなデータを取得できる
</pre>


<h2>Riakについて</h2>

<p>Riakの特徴は次の通り。</p>

<pre>
高可用性) 多少のハードウェアやネットワークの故障でシステムが停止することなく、どんなときも書き込みと読み出しができる
高信頼性) 多少の負荷でもシステムは安定したレスポンスとスループットを提供する
拡張性) データ量や負荷に応じて、無停止でシステムをスケールアウトさせることができる
低遅延) どんなときでも、ユーザーを待たせず、すぐにレスポンスを得ることができる
予測可能性) 性能予測を裏切らない、安定したスケールアウト性
</pre>


<p>Riakを利用すべきシーン。</p>

<pre>
・データ量が数倍のレベルで増減する
・簡単にスケールアウトしたい
・複数行のトランザクションやJOINがない
・スパイク時でも安定したレイテンシが欲しい
・故障時の運用を簡単にしたい
・アインしんして夜に眠りたい
</pre>


<p>ちなみに、GitHub Pagesの静的ファイルはすべてRiak上に保存されている。</p>

<h2>SQLの基礎</h2>

<p>SQLの種類。</p>

<pre>
データ操作言語(DML: Data Manipulation Language) select/insert/update/deleteなど
データ定義言語(DDL: Data Definition Language) テーブル作成やフィールのデータ型の変更など
データ制御言語(DCL: Data Control Language) ユーザーの作成や権限の設定、排他制御の管理など
</pre>




<br style="clear:both;"/>


<p><div>
  <script type="text/javascript"><!--
  google_ad_client = "ca-pub-4186413323075068";
  /* middle_yoko_naga2 */
  google_ad_slot = "4362325392";
  google_ad_width = 728;
  google_ad_height = 90;
  //-->
  </script>
  <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS/Mac OSXへのRedis導入手順 - memcacheライクなKey-Value方式と、永続化対応のインメモリDB]]></title>
    <link href="http://morizyun.github.io/blog/redis-mac-centos-rails/"/>
    <updated>2014-12-22T20:05:00+09:00</updated>
    <id>http://morizyun.github.io/blog/redis-mac-centos-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4873115930/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4873115930&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4873115930&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4873115930" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />memcachedライクなKey-Value方式と、永続化対応のインメモリDB『<strong><a href="http://redis.io/">Redis</a></strong>』をMac OSXや、CentOSに導入する手順です。Redisを効率的に活用して、さらにRailsアプリを高速化しちゃいましょう＾＾</p>

<!-- more -->


<br style="clear:both;"/>


<p><div>
  <script type="text/javascript"><!--
  google_ad_client = "ca-pub-4186413323075068";
  /* middle_yoko_naga2 */
  google_ad_slot = "4362325392";
  google_ad_width = 728;
  google_ad_height = 90;
  //-->
  </script>
  <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</div></p>

<h2>CentOS 6.xへのインストール</h2>

<p>まずは、CentOS 6.xにyumをつかってRedisをインストールする前にEPELを追加。追加済の場合はスキップ。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum --enablerepo<span class="o">=</span>epel -y install redis
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Redisを起動。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/init.d/redis start
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に動作確認してみます。<code>redis-cli</code>でRedisに接続できます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>redis-cli&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;set <span class="s1">&#39;test&#39;</span> 10
</span><span class='line'>OK
</span><span class='line'>get <span class="s1">&#39;test&#39;</span>
</span><span class='line'><span class="s2">&quot;10&quot;</span>
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>さらにサーバの起動時にRedisが起動するように設定します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chkconfig redis on
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>自動起動の設定が成功したか確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig --list | grep redis&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;redis           0:off   1:off   2:on    3:on    4:on    5:on    6:off <span class="c">#&amp;lt;= となっていれば成功</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<h2>Macへのインストール(Homebrew)</h2>

<p>Macの『<a href="http://mxcl.github.com/homebrew/">Homebrew</a>』をつかってのインストール手順はこちら。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install redis&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;<span class="o">==</span>&gt; Downloading http://redis.googlecode.com/files/redis-2.6.7.tar.gz
</span><span class='line'>Already downloaded: /Library/Caches/Homebrew/redis-2.6.7.tar.gz
</span><span class='line'><span class="o">==</span>&gt; make -C /private/tmp/redis-KHTm/redis-2.6.7/src <span class="nv">CC</span><span class="o">=</span><span class="nv">cc</span>
</span><span class='line'><span class="o">==</span>&gt; Caveats
</span><span class='line'>You should reload redis:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
</span><span class='line'>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;/usr/local/Cellar/redis/2.6.7: 9 files, 744K, built in 2 seconds
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>Macの起動時にRedisが自動起動するように設定。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents
</span><span class='line'>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>redisの接続確認はこちら。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>redis-cli
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div>
  <script type="text/javascript"><!--
  google_ad_client = "ca-pub-4186413323075068";
  /* middle_yoko_naga2 */
  google_ad_slot = "4362325392";
  google_ad_width = 728;
  google_ad_height = 90;
  //-->
  </script>
  <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</div></p>

<h2>Special Thanks</h2>

<p><a href="http://blog.livedoor.jp/tattyamm/archives/4147335.html">さくらVPS(CentOS6.3)へのredisインストールとchkconfigへの登録 - えんたつの記録</a></p>

<p><a href="http://codenote.net/redis/1610.html">[Mac] Redis を Homebrew でインストールする手順 | CodeNote.net</a></p>

<p><a href="http://blog.scimpr.com/2013/01/21/rails%E3%81%A7redis%E3%82%92%E4%BD%BF%E3%81%86%E4%BE%8B%E3%81%AE%E3%83%A1%E3%83%A2/">RailsでRedisを使う例のメモ | Scimpr Blog</a></p>

<p><a href="http://www.techscore.com/blog/2013/01/09/memcached%E3%81%A8redis%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/">» memcachedとredisについて TECHSCORE BLOG</a></p>

<h2>変更来歴</h2>

<p>(13/03/01) 新規作成<br/>
(14/01/03) Redisの自動起動のコマンドを修正<br/>
(14/12/22) 基本的な記述を修正<br/></p>
]]></content>
  </entry>
  
</feed>
